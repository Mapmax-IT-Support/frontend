{"ast":null,"code":"import clamp from 'clamp';\nimport { getContainerToImageRatio, getSmallToLargeImageRatio } from './imageRatio';\n\nfunction getMinCoordinates(container, largeImage) {\n  return {\n    x: (largeImage.width - container.width) * -1,\n    y: (largeImage.height - container.height) * -1\n  };\n}\n\nfunction getMaxCoordinates() {\n  return {\n    x: 0,\n    y: 0\n  };\n}\n\nexport function getLensModeEnlargedImageCoordinates(_ref) {\n  var containerDimensions = _ref.containerDimensions,\n      lensCursorOffset = _ref.cursorOffset,\n      largeImage = _ref.largeImage,\n      position = _ref.position,\n      smallImage = _ref.smallImage;\n  var adjustedPosition = getCursorPositionAdjustedForLens(position, lensCursorOffset);\n  var ratio = getSmallToLargeImageRatio(smallImage, largeImage);\n  var coordinates = {\n    x: Math.round(adjustedPosition.x * ratio.x) * -1,\n    y: Math.round(adjustedPosition.y * ratio.y) * -1\n  };\n  var minCoordinates = getMinCoordinates(containerDimensions, largeImage);\n  var maxCoordinates = getMaxCoordinates();\n  return clampImageCoordinates(coordinates, minCoordinates, maxCoordinates);\n}\nexport function getInPlaceEnlargedImageCoordinates(_ref2) {\n  var containerDimensions = _ref2.containerDimensions,\n      largeImage = _ref2.largeImage,\n      position = _ref2.position;\n  var minCoordinates = getMinCoordinates(containerDimensions, largeImage);\n  var maxCoordinates = getMaxCoordinates();\n  var ratio = getContainerToImageRatio(containerDimensions, largeImage);\n  var coordinates = {\n    x: Math.round(position.x * ratio.x) * -1,\n    y: Math.round(position.y * ratio.y) * -1\n  };\n  return clampImageCoordinates(coordinates, minCoordinates, maxCoordinates);\n}\n\nfunction clampImageCoordinates(imageCoordinates, minCoordinates, maxCoordinates) {\n  return {\n    x: clamp(imageCoordinates.x, minCoordinates.x, maxCoordinates.x),\n    y: clamp(imageCoordinates.y, minCoordinates.y, maxCoordinates.y)\n  };\n}\n\nfunction getCursorPositionAdjustedForLens(position, lensCursorOffset) {\n  return {\n    x: position.x - lensCursorOffset.x,\n    y: position.y - lensCursorOffset.y\n  };\n}","map":{"version":3,"names":["clamp","getContainerToImageRatio","getSmallToLargeImageRatio","getMinCoordinates","container","largeImage","x","width","y","height","getMaxCoordinates","getLensModeEnlargedImageCoordinates","_ref","containerDimensions","lensCursorOffset","cursorOffset","position","smallImage","adjustedPosition","getCursorPositionAdjustedForLens","ratio","coordinates","Math","round","minCoordinates","maxCoordinates","clampImageCoordinates","getInPlaceEnlargedImageCoordinates","_ref2","imageCoordinates"],"sources":["/Users/sumanthvarma/Desktop/frontend/node_modules/react-image-magnify/dist/es/lib/imageCoordinates.js"],"sourcesContent":["import clamp from 'clamp';\nimport { getContainerToImageRatio, getSmallToLargeImageRatio } from './imageRatio';\n\nfunction getMinCoordinates(container, largeImage) {\n    return {\n        x: (largeImage.width - container.width) * -1,\n        y: (largeImage.height - container.height) * -1\n    };\n}\n\nfunction getMaxCoordinates() {\n    return {\n        x: 0,\n        y: 0\n    };\n}\n\nexport function getLensModeEnlargedImageCoordinates(_ref) {\n    var containerDimensions = _ref.containerDimensions,\n        lensCursorOffset = _ref.cursorOffset,\n        largeImage = _ref.largeImage,\n        position = _ref.position,\n        smallImage = _ref.smallImage;\n\n    var adjustedPosition = getCursorPositionAdjustedForLens(position, lensCursorOffset);\n    var ratio = getSmallToLargeImageRatio(smallImage, largeImage);\n    var coordinates = {\n        x: Math.round(adjustedPosition.x * ratio.x) * -1,\n        y: Math.round(adjustedPosition.y * ratio.y) * -1\n    };\n    var minCoordinates = getMinCoordinates(containerDimensions, largeImage);\n    var maxCoordinates = getMaxCoordinates();\n\n    return clampImageCoordinates(coordinates, minCoordinates, maxCoordinates);\n}\n\nexport function getInPlaceEnlargedImageCoordinates(_ref2) {\n    var containerDimensions = _ref2.containerDimensions,\n        largeImage = _ref2.largeImage,\n        position = _ref2.position;\n\n    var minCoordinates = getMinCoordinates(containerDimensions, largeImage);\n    var maxCoordinates = getMaxCoordinates();\n    var ratio = getContainerToImageRatio(containerDimensions, largeImage);\n    var coordinates = {\n        x: Math.round(position.x * ratio.x) * -1,\n        y: Math.round(position.y * ratio.y) * -1\n    };\n\n    return clampImageCoordinates(coordinates, minCoordinates, maxCoordinates);\n}\n\nfunction clampImageCoordinates(imageCoordinates, minCoordinates, maxCoordinates) {\n    return {\n        x: clamp(imageCoordinates.x, minCoordinates.x, maxCoordinates.x),\n        y: clamp(imageCoordinates.y, minCoordinates.y, maxCoordinates.y)\n    };\n}\n\nfunction getCursorPositionAdjustedForLens(position, lensCursorOffset) {\n    return {\n        x: position.x - lensCursorOffset.x,\n        y: position.y - lensCursorOffset.y\n    };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}