{"ast":null,"code":"var _jsxFileName = \"/Users/sumanthvarma/Desktop/frontend/src/Components/Home/LookUpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport '../../css/App.scss';\nimport { updateBusinessType } from '../../Actions/business-actions';\nimport { updateReady } from '../../Actions/ready-actions';\nimport { updateIsCity } from '../../Actions/isCity-actions';\nimport { updateDataRange } from '../../Actions/dataRange-actions';\nimport { updateGeoUnit } from '../../Actions/geoUnit-actions';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport AutoCompleteBar from '../AutoCompleteBar';\nimport * as selectors from '../../Reducers/selectors';\nimport { updateAddress } from '../../Actions/address-actions';\nimport { withRouter } from 'react-router-dom';\nimport { AiOutlineInfoCircle } from 'react-icons/ai';\nimport Modal from 'react-bootstrap/Modal';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { getLocation, createLocation } from '../../Requests/locations-requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZIP = 'zip code tabulation area';\n\nclass LookUpForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadAddress = async address => {\n      await this.setState({\n        error: false\n      });\n      return new Promise(async (resolve, reject) => {\n        let zip,\n            number,\n            street,\n            city,\n            state = '';\n        let place;\n        let geoCode = await geocodeByAddress(address).then(results => {\n          for (let c of results[0].address_components) {\n            for (let type of c.types) {\n              if (type == 'street_number') number = c.long_name;\n              if (type == 'route') street = c.short_name;\n              if (type == 'locality') city = c.long_name;\n              if (type == 'administrative_area_level_1') state = c.short_name;\n              if (type == \"postal_code\") zip = c.long_name;\n            }\n          }\n\n          if (number == undefined) number = '';\n          if (street == undefined) street = '';\n          place = results[0];\n          return getLatLng(results[0]);\n        }).then(latLng => latLng).catch(error => console.error('Error', error));\n        let addressState = {};\n        addressState.formatted = address;\n        addressState.street = number + ' ' + street;\n        addressState.city = city;\n        addressState.state = state;\n        addressState.zip = zip;\n        addressState.coords = geoCode;\n        addressState.place = place; // handle no zip\n\n        if (addressState.zip == undefined) {\n          this.setState({\n            error: true,\n            errorMessage: \"Address is too general, please try another.\"\n          });\n          return;\n        } // handle no street\n\n\n        if (addressState.street == \" \") {\n          let firstPart = address.substring(0, address.indexOf(','));\n          let alreadyInAddress = false;\n          Object.entries(addressState).forEach(_ref => {\n            let [label, value] = _ref;\n\n            if (value == firstPart) {\n              alreadyInAddress = true;\n            }\n          });\n          if (!alreadyInAddress) addressState.street = firstPart;\n        } // handle no city\n\n\n        if (addressState.city == undefined) {\n          let secondPart = address.substring(address.indexOf(',') + 1, address.length);\n          secondPart = secondPart.substring(0, secondPart.indexOf(','));\n          let alreadyInAddress2 = false;\n          Object.entries(addressState).forEach(_ref2 => {\n            let [label, value] = _ref2;\n\n            if (value == secondPart) {\n              alreadyInAddress2 = true;\n            }\n          });\n          if (!alreadyInAddress2) addressState.city = secondPart;\n        }\n\n        await this.setState({\n          address: addressState\n        });\n        resolve(addressState);\n      });\n    };\n\n    this.onUpdateAddress = async () => {\n      let address = this.state.address; // check for location from db \n\n      let results = await getLocation(address.place.place_id);\n      /* \n       if (results.res.length <= 0) {\n           let createRes = await createLocation(address.place.place_id, address)\n           address.isNewEntry = true\n       } else {\n           address.isNewEntry = false\n       }\n       */\n\n      address.isNewEntry = true;\n      let countyRes = await this.props.onUpdateAddress(address);\n    };\n\n    this.checkLocalStorage = location => {\n      // if signed in push to recent searches\n      if (this.props.user_id != -1) {\n        let searches = JSON.parse(localStorage.getItem('recentSearches'));\n        if (searches == null) searches = new Map();else {\n          // keep last 25 \n          if (searches.length > 25) searches = searches.slice(searches.length - 25, searches.length);\n          searches = new Map(searches);\n        }\n        searches.set(location.place.place_id, {\n          location: location,\n          business_type: this.props.business_type,\n          date: new Date()\n        });\n        localStorage.setItem('recentSearches', JSON.stringify(Array.from(searches.entries())));\n      }\n    };\n\n    this.getAddress = async address => {\n      let addressState = await this.loadAddress(address);\n      await this.setState({\n        address: addressState\n      });\n    };\n\n    this.setModalShow = flag => {\n      this.setState({\n        showModal: flag\n      });\n    };\n\n    this.onUpdateDataRange = range => {\n      this.props.onUpdateDataRange(range);\n    };\n\n    this.onUpdateGeoUnit = geo_unit => {\n      this.props.onUpdateGeoUnit(geo_unit);\n    };\n\n    this.onHandleAddressWarning = () => {\n      this.setState({\n        error: true,\n        errorMessage: \"Please begin typing your address and make sure to select it from the drop down menu.\"\n      });\n    };\n\n    this.onFormChange = this.onFormChange.bind(this);\n    this.onBusinessFormChange = this.onBusinessFormChange.bind(this);\n    this.onUpdateBusinessType = this.onUpdateBusinessType.bind(this);\n    this.onUpdateReady = this.onUpdateReady.bind(this);\n    this.onHandleSubmit = this.onHandleSubmit.bind(this);\n    this.onUpdateIsCity = this.onUpdateIsCity.bind(this);\n    this.onPriceFormChange = this.onPriceFormChange.bind(this);\n    this.onUpdateAddress = this.onUpdateAddress.bind(this);\n    this.getAddress = this.getAddress.bind(this);\n    this.state = {\n      address: undefined,\n      priceLevel: 1,\n      business_type: 'none',\n      distance: 'Driving',\n      geoUnit: this.props.geo_unit,\n      showModal: false,\n      recentSearchs: new Map(),\n      errorMessage: \"\",\n      error: false\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.urlParams) {\n      let type = this.props.urlParams.business_type;\n      if (type == 'lodging') type = 'hotels /lodging';\n      let business = {\n        type: 'none',\n        //this.props.urlParams.business_type,\n        priceLevel: this.state.priceLevel\n      };\n      let promises = [this.loadAddress(JSON.parse(this.props.urlParams.address)), this.onUpdateBusinessType(business), this.setState({\n        business_type: this.props.urlParams.business_type.replace(/_/g, ' ')\n      })];\n      /*\n                  if (this.props.urlParams.distance.toLowerCase() == 'driving') {\n                      promises.push(this.onUpdateIsCity(false))\n                      promises.push(this.setState({distance: 'Driving'}))\n                  }\n                  else  {\n                      promises.push(this.onUpdateIsCity(true))\n                      promises.push(this.setState({distance: 'Walking'}))\n                  }\n                  */\n\n      let res = await Promise.all(promises);\n      await this.onUpdateAddress();\n      this.onUpdateReady(true);\n    }\n  }\n\n  onUpdateBusinessType(business_type) {\n    this.props.onUpdateBusinessType(business_type);\n  }\n\n  onUpdateIsCity(isCity) {\n    this.props.onUpdateIsCity(isCity);\n  }\n\n  onFormChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onPriceFormChange(event) {\n    let value = event.target.value.substring(0, 1);\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  onBusinessFormChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onUpdateReady(isReady) {\n    this.props.onUpdateReady(isReady);\n  }\n\n  async onHandleSubmit() {\n    // return if no address\n    if (this.state.address == undefined) return;\n    await this.onUpdateAddress(this.state.address);\n    let type = this.state.business_type;\n    if (type == 'hotels /lodging') type = 'lodging';\n    let business = {\n      type: type.replace(/ /g, '_'),\n      priceLevel: this.state.priceLevel\n    };\n    this.onUpdateBusinessType(business);\n    this.onUpdateGeoUnit(this.state.geoUnit);\n\n    if (this.props.address.toString().length > 0) {\n      if (this.props.ready) {\n        await this.onUpdateReady(false);\n        await this.onUpdateReady(true);\n      } else {\n        await this.onUpdateReady(true);\n      } // reset data_range to zip\n\n\n      if (this.props.data_range != ZIP) {\n        await this.props.onUpdateDataRange(ZIP);\n      } // recent searches\n\n\n      this.checkLocalStorage(this.props.address);\n      let address = encodeURI(JSON.stringify(this.props.address.formatted));\n      let business_type = encodeURI(this.props.business_type.type);\n      let url = '/' + address + '/' + business_type;\n      this.props.history.push(url);\n    } else {\n      this.onUpdateReady(false);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lookup-form-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessage\",\n        children: this.state.error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n        show: this.state.showModal,\n        onHide: () => this.setState({\n          showModal: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addressText\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"howToContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'white'\n            },\n            children: \"How to use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InfoButton, {\n            clickFunction: () => this.setModalShow(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchGo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchContainer\",\n          children: /*#__PURE__*/_jsxDEV(AutoCompleteBar, {\n            urlParams: this.props.urlParams,\n            addressFunction: this.getAddress,\n            position: \"relative\",\n            fontSize: \"18px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            marginLeft: '.75em'\n          },\n          children: [this.state.address !== undefined && /*#__PURE__*/_jsxDEV(Button, {\n            disabled: this.state.error,\n            variant: \"primary\",\n            onClick: this.onHandleSubmit,\n            style: {\n              backgroundColor: '#00d4ff',\n              fontWeight: 'bold'\n            },\n            children: \"Go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 66\n          }, this), this.state.address === undefined && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.onHandleAddressWarning,\n            style: {\n              backgroundColor: '#00d4ff',\n              fontWeight: 'bold',\n              opacity: 0.75\n            },\n            children: \"Go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimerContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: 18,\n            color: 'whitesmoke',\n            margin: 'auto'\n          },\n          children: \"*Current locations support New Jersey, the 5 boroughs of New York City, and Long Island, New York, USA.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst InfoButton = props => {\n  _s();\n\n  const [clicked, setClicked] = useState(false);\n  let color = 'white';\n\n  if (clicked) {//   color = 'rgba(255,255,255,0.5'\n  } else color = 'white';\n\n  let style = {\n    color: color,\n    float: 'right'\n  };\n  return /*#__PURE__*/_jsxDEV(AiOutlineInfoCircle, {\n    onClick: e => [setClicked(!clicked), props.clickFunction()],\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 10\n  }, this);\n};\n\n_s(InfoButton, \"NL05b5J4z4O/U6wEzhVGl+YEdv8=\");\n\n_c = InfoButton;\n\nconst MyVerticallyCenteredModal = props => {\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Location Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: '20px'\n        },\n        children: \"Start typing a street address* or the name of a business and select from the autofill results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"*Current locations support New Jersey, the 5 boroughs of New York City, and Long Island, New York, USA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 29\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 23\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" For intersections type the first Street/Avenue/Road then '&' or 'and' then the next Street/Avenue/Road.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 144\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"For example, '3rd Ave & 11th St, New York, NY'\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 154\n            }, this), \"   \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = MyVerticallyCenteredModal;\nconst mapStateToProps = createSelector(selectors.userSelector, selectors.businessTypeSelector, selectors.readySelector, selectors.addressSelector, selectors.isCitySelector, selectors.tradeZoneBoundsSelector, selectors.dataRangeSelector, selectors.geoUnitSelector, (user, business_type, ready, address, isCity, tradeZone_bounds, data_range, geo_unit) => ({\n  user,\n  business_type,\n  ready,\n  address,\n  isCity,\n  tradeZone_bounds,\n  data_range,\n  geo_unit\n}));\nconst mapActionsToProps = {\n  onUpdateBusinessType: updateBusinessType,\n  onUpdateReady: updateReady,\n  onUpdateIsCity: updateIsCity,\n  onUpdateAddress: updateAddress,\n  onUpdateDataRange: updateDataRange,\n  onUpdateGeoUnit: updateGeoUnit\n};\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(LookUpForm));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InfoButton\");\n$RefreshReg$(_c2, \"MyVerticallyCenteredModal\");","map":{"version":3,"names":["React","useState","Form","Button","updateBusinessType","updateReady","updateIsCity","updateDataRange","updateGeoUnit","connect","createSelector","AutoCompleteBar","selectors","updateAddress","withRouter","AiOutlineInfoCircle","Modal","geocodeByAddress","getLatLng","getLocation","createLocation","ZIP","LookUpForm","Component","constructor","props","loadAddress","address","setState","error","Promise","resolve","reject","zip","number","street","city","state","place","geoCode","then","results","c","address_components","type","types","long_name","short_name","undefined","latLng","catch","console","addressState","formatted","coords","errorMessage","firstPart","substring","indexOf","alreadyInAddress","Object","entries","forEach","label","value","secondPart","length","alreadyInAddress2","onUpdateAddress","place_id","isNewEntry","countyRes","checkLocalStorage","location","user_id","searches","JSON","parse","localStorage","getItem","Map","slice","set","business_type","date","Date","setItem","stringify","Array","from","getAddress","setModalShow","flag","showModal","onUpdateDataRange","range","onUpdateGeoUnit","geo_unit","onHandleAddressWarning","onFormChange","bind","onBusinessFormChange","onUpdateBusinessType","onUpdateReady","onHandleSubmit","onUpdateIsCity","onPriceFormChange","priceLevel","distance","geoUnit","recentSearchs","componentDidMount","urlParams","business","promises","replace","res","all","isCity","event","target","name","isReady","toString","ready","data_range","encodeURI","url","history","push","render","color","flexDirection","justifyContent","marginLeft","backgroundColor","fontWeight","opacity","fontSize","margin","InfoButton","clicked","setClicked","style","float","e","clickFunction","MyVerticallyCenteredModal","onHide","mapStateToProps","userSelector","businessTypeSelector","readySelector","addressSelector","isCitySelector","tradeZoneBoundsSelector","dataRangeSelector","geoUnitSelector","user","tradeZone_bounds","mapActionsToProps"],"sources":["/Users/sumanthvarma/Desktop/frontend/src/Components/Home/LookUpForm.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport '../../css/App.scss';\nimport { updateBusinessType} from '../../Actions/business-actions'\nimport { updateReady } from '../../Actions/ready-actions'\nimport { updateIsCity } from '../../Actions/isCity-actions'\nimport { updateDataRange } from '../../Actions/dataRange-actions'\nimport { updateGeoUnit } from '../../Actions/geoUnit-actions'\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport AutoCompleteBar from '../AutoCompleteBar'\nimport * as selectors from '../../Reducers/selectors'\nimport { updateAddress} from '../../Actions/address-actions'\nimport {  withRouter } from 'react-router-dom'\nimport {AiOutlineInfoCircle} from 'react-icons/ai'\nimport Modal from 'react-bootstrap/Modal'\nimport  {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport { getLocation, createLocation } from '../../Requests/locations-requests';\n\nconst ZIP = 'zip code tabulation area'\n\nclass LookUpForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.onFormChange = this.onFormChange.bind(this);\n        this.onBusinessFormChange = this.onBusinessFormChange.bind(this);\n        this.onUpdateBusinessType = this.onUpdateBusinessType.bind(this);\n        this.onUpdateReady = this.onUpdateReady.bind(this)\n        this.onHandleSubmit = this.onHandleSubmit.bind(this)\n        this.onUpdateIsCity = this.onUpdateIsCity.bind(this)\n        this.onPriceFormChange = this.onPriceFormChange.bind(this)\n        this.onUpdateAddress = this.onUpdateAddress.bind(this)\n        this.getAddress = this.getAddress.bind(this)\n\n        this.state = {\n            address: undefined,\n            priceLevel : 1,\n            business_type : 'none',\n            distance: 'Driving',\n            geoUnit: this.props.geo_unit,\n            showModal: false,\n            recentSearchs : new Map(),\n            errorMessage : \"\",\n            error : false,\n        };\n    }\n\n    async componentDidMount() {\n\n        if (this.props.urlParams) {\n            let type = this.props.urlParams.business_type\n            if (type == 'lodging') type = 'hotels /lodging'\n\n            let business = {\n                type: 'none', //this.props.urlParams.business_type,\n                priceLevel : this.state.priceLevel\n            }\n            let promises= [\n                this.loadAddress(JSON.parse(this.props.urlParams.address)),\n                this.onUpdateBusinessType(business),\n                this.setState({business_type: this.props.urlParams.business_type.replace(/_/g, ' ')}),\n            ]\n/*\n            if (this.props.urlParams.distance.toLowerCase() == 'driving') {\n                promises.push(this.onUpdateIsCity(false))\n                promises.push(this.setState({distance: 'Driving'}))\n            }\n            else  {\n                promises.push(this.onUpdateIsCity(true))\n                promises.push(this.setState({distance: 'Walking'}))\n            }\n            */\n            let res = await Promise.all(promises)\n            await this.onUpdateAddress()\n            this.onUpdateReady(true)\n        }\n    }\n\n    loadAddress = async (address) => {\n        await this.setState({ error : false })\n\n        return new Promise(async (resolve, reject) => {\n\n            let zip, number, street, city, state = ''\n            let place;\n            let geoCode = await geocodeByAddress(address)\n            .then(results => { \n                for (let c of results[0].address_components) {\n                    for (let type of c.types) {\n                        if (type == 'street_number')\n                            number = c.long_name \n                        if (type == 'route')\n                            street =  c.short_name \n                        if (type == 'locality')\n                            city = c.long_name\n                        if (type == 'administrative_area_level_1')\n                            state = c.short_name\n                        if (type == \"postal_code\") \n                            zip = c.long_name\n                    }\n                }\n                if (number == undefined) number = ''\n                if (street == undefined) street = ''\n                place = results[0]\n                return getLatLng(results[0])\n            })\n            .then(latLng => latLng)\n            .catch(error => console.error('Error', error));\n            let addressState = {}\n            addressState.formatted = address\n            addressState.street = number + ' ' + street\n           \n            addressState.city = city\n            addressState.state = state\n            addressState.zip = zip\n            addressState.coords = geoCode\n            addressState.place = place\n\n            // handle no zip\n            if (addressState.zip == undefined) {\n                this.setState({ error : true, errorMessage : \"Address is too general, please try another.\"})\n                return \n            }\n            \n            // handle no street\n            if (addressState.street == \" \") {\n                let firstPart = address.substring(0, address.indexOf(','))\n                let alreadyInAddress = false\n\n                Object.entries(addressState).forEach(([label, value]) => {\n                    if (value == firstPart) {\n                        alreadyInAddress = true\n                    }\n                })\n                if (!alreadyInAddress)\n                    addressState.street = firstPart\n            }\n\n            // handle no city\n            if (addressState.city == undefined) {\n                let secondPart = address.substring(address.indexOf(',')+1, address.length)\n                secondPart = secondPart.substring(0, secondPart.indexOf(','))\n                let alreadyInAddress2 = false\n\n                Object.entries(addressState).forEach(([label, value]) => {\n                    if (value == secondPart) {\n                        alreadyInAddress2 = true\n                    }\n                })\n                if (!alreadyInAddress2)\n                    addressState.city = secondPart\n            }\n\n        \n            await this.setState({address: addressState })\n            resolve(addressState)\n        })\n\n    }\n    \n    onUpdateBusinessType(business_type) {\n        this.props.onUpdateBusinessType(business_type)\n    }\n\n    onUpdateIsCity(isCity) {\n        this.props.onUpdateIsCity(isCity)\n    }\n    onFormChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    onPriceFormChange(event) {\n       let value = event.target.value.substring(0, 1)\n       this.setState({[event.target.name]: value})\n    }\n\n    onBusinessFormChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    onUpdateReady(isReady) {\n        this.props.onUpdateReady(isReady)\n    }\n\n    async onHandleSubmit() {\n        // return if no address\n        if (this.state.address == undefined) \n            return;\n        \n        await this.onUpdateAddress(this.state.address)\n        let type = this.state.business_type\n        if (type == 'hotels /lodging') type = 'lodging'\n        let business = {\n            type: type.replace(/ /g, '_'),\n            priceLevel : this.state.priceLevel\n        }\n        this.onUpdateBusinessType(business)\n        this.onUpdateGeoUnit(this.state.geoUnit)\n       \n        if (this.props.address.toString().length > 0) {\n            if (this.props.ready) {\n                await this.onUpdateReady(false)\n                await this.onUpdateReady(true)\n            } else {\n                await this.onUpdateReady(true)\n            }\n\n            // reset data_range to zip\n            if (this.props.data_range != ZIP) {\n                await this.props.onUpdateDataRange(ZIP)\n            }\n            // recent searches\n            this.checkLocalStorage(this.props.address)\n\n            let address = encodeURI(JSON.stringify(this.props.address.formatted))\n            let business_type = encodeURI(this.props.business_type.type)\n            let url = '/' + address + '/' + business_type\n            this.props.history.push(url)\n        }\n        else {\n            this.onUpdateReady(false)\n        }\n    }\n\n    onUpdateAddress = async () => {\n        let address = this.state.address\n        // check for location from db \n        let results = await getLocation(address.place.place_id)\n       /* \n        if (results.res.length <= 0) {\n            let createRes = await createLocation(address.place.place_id, address)\n            address.isNewEntry = true\n        } else {\n            address.isNewEntry = false\n        }\n        */\n       address.isNewEntry = true\n       let countyRes = await \n       this.props.onUpdateAddress(address)\n    }\n\n    checkLocalStorage = location => {\n        // if signed in push to recent searches\n        if (this.props.user_id != -1) {\n               let searches = JSON.parse(localStorage.getItem('recentSearches'))\n      \n               if (searches == null) searches = new Map()\n               else {\n                    // keep last 25 \n                    if (searches.length > 25)\n                    searches = searches.slice((searches.length) -25, searches.length)\n                    searches = new Map(searches)\n               }\n   \n               searches.set(location.place.place_id, { \n                   location: location,\n                    business_type: this.props.business_type,\n                    date : new Date()\n                })\n\n               localStorage.setItem('recentSearches', JSON.stringify(Array.from(searches.entries())))\n           }\n    }\n\n    getAddress = async (address) => {\n        let addressState = await this.loadAddress(address)\n        await this.setState({address: addressState})\n    }\n\n    setModalShow = (flag) => {\n        this.setState({showModal: flag})\n    }\n\n    onUpdateDataRange = (range) => {\n        this.props.onUpdateDataRange(range)\n    }\n\n    onUpdateGeoUnit = (geo_unit) => {\n        this.props.onUpdateGeoUnit(geo_unit)\n    }\n\n    onHandleAddressWarning = () => {\n        this.setState({ error : true, errorMessage : \"Please begin typing your address and make sure to select it from the drop down menu.\"})\n    }\n\n    render() {\n \n        return (\n            <div className=\"lookup-form-block\">\n                <div className=\"errorMessage\">\n                    {this.state.error && <div>{this.state.errorMessage}</div>}\n                </div>\n                <MyVerticallyCenteredModal\n                    show={this.state.showModal}\n                    onHide={() => this.setState({showModal:false})}\n                />          \n                <div className=\"searchHeader\">\n                    <div className=\"addressText\">Address</div>\n                    <div className=\"howToContainer\">\n                        <span style={{ color: 'white'}}>How to use</span>\n                        <InfoButton clickFunction={()=>this.setModalShow(true)}/>    \n                    </div>\n                </div>\n\n                <div className=\"searchGo\">\n                    <div className=\"searchContainer\">\n                        <AutoCompleteBar urlParams={this.props.urlParams} addressFunction={this.getAddress} position=\"relative\" fontSize=\"18px\"/>\n                    </div>\n                    <Form style={{ flexDirection : 'row', justifyContent: 'flex-start', marginLeft: '.75em'}}>\n                            {this.state.address !== undefined && <Button  disabled={this.state.error} variant=\"primary\" onClick={this.onHandleSubmit} \n                                style={{backgroundColor:'#00d4ff', fontWeight: 'bold'}}>\n                                Go</Button>\n                            }\n                            {this.state.address === undefined && <Button  variant=\"primary\" onClick={this.onHandleAddressWarning} \n                                style={{backgroundColor:'#00d4ff', fontWeight: 'bold', opacity: 0.75}}>\n                                Go</Button>\n                            }\n                    </Form>\n                </div>\n                \n                <div className=\"disclaimerContainer\">\n                    <p style={{ fontSize: 18, color: 'whitesmoke', margin: 'auto'}}>*Current locations support New Jersey, the 5 boroughs of New York City, and Long Island, New York, USA.</p>\n                </div>\n  \n        </div>\n        );\n    }\n}\n\nconst InfoButton = (props) => {\n    const [clicked, setClicked] = useState(false)\n    let color = 'white'\n\n    if (clicked) {\n     //   color = 'rgba(255,255,255,0.5'\n    }\n    else color = 'white'\n    \n    let style = {color: color, float: 'right'}\n\n    return (\n         <AiOutlineInfoCircle onClick={(e)=> [setClicked(!clicked), props.clickFunction()]} \n         style={style}/>\n    ) \n}\n\nconst MyVerticallyCenteredModal = (props) => {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n           Location Search \n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h3 style={{fontSize: '20px'}}>\n            Start typing a street address* or the name of a business and select from the autofill results.\n          </h3>\n          <p>\n              <ul>\n                  <li><span><strong>*Current locations support New Jersey, the 5 boroughs of New York City, and Long Island, New York, USA</strong> </span> </li>\n                  <li><span> For intersections type the first Street/Avenue/Road then '&amp;' or 'and' then the next Street/Avenue/Road.</span><br></br> <span>\n            For example, '3rd Ave &amp; 11th St, New York, NY'\n            </span>   </li>\n              </ul>\n          </p>\n          \n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n  \nconst mapStateToProps = createSelector(\n    selectors.userSelector,\n    selectors.businessTypeSelector,\n    selectors.readySelector,\n    selectors.addressSelector,\n    selectors.isCitySelector,\n    selectors.tradeZoneBoundsSelector,\n    selectors.dataRangeSelector,\n    selectors.geoUnitSelector,\n    (user, business_type, ready, address, isCity, tradeZone_bounds, data_range, geo_unit) => ({\n        user,\n        business_type,\n        ready,\n        address,\n        isCity,\n        tradeZone_bounds,\n        data_range,\n        geo_unit\n    })\n);\n\nconst mapActionsToProps = {\n     onUpdateBusinessType: updateBusinessType,\n     onUpdateReady: updateReady,\n     onUpdateIsCity: updateIsCity,\n     onUpdateAddress: updateAddress,\n     onUpdateDataRange: updateDataRange,\n     onUpdateGeoUnit : updateGeoUnit\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps) (LookUpForm));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}