{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createForOfIteratorHelper from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{getDistance}from'../Requests/directions-requests';import{getSubwayTotals}from'../Requests/subway-requests';export var hasSubways=function hasSubways(zip){return Number(zip)>=10001&&Number(zip)<=11697;};export var getDistancesFromMap=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(placeMap,origin){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",new Promise(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve,reject){var method,subways,i,_iterator,_step,_step$value,pid,place,destination,res,coords,places,_iterator2,_step2,e,results,_iterator3,_step3,_e,_destination,dir;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:method='WALKING';subways=new Map();i=0;_iterator=_createForOfIteratorHelper(placeMap);_context.prev=4;_iterator.s();case 6:if((_step=_iterator.n()).done){_context.next=18;break;}_step$value=_slicedToArray(_step.value,2),pid=_step$value[0],place=_step$value[1];if(!(i>4)){_context.next=10;break;}return _context.abrupt(\"break\",18);case 10:destination=place.geometry.location;_context.next=13;return getDistance(origin,destination,method);case 13:res=_context.sent;if(res.rows[0].elements[0].duration.value<=630){// 630 sec, 10.5 min\nsubways.set(pid,{directions:res.rows[0].elements[0],place:place});}i+=1;case 16:_context.next=6;break;case 18:_context.next=23;break;case 20:_context.prev=20;_context.t0=_context[\"catch\"](4);_iterator.e(_context.t0);case 23:_context.prev=23;_iterator.f();return _context.finish(23);case 26:coords=[];places=[];_iterator2=_createForOfIteratorHelper(subways);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){e=_step2.value;coords.push(e[1].place.geometry.location);//    places.push(e.place)\n}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}_context.next=32;return getSubwayTotals(coords);case 32:results=_context.sent;_iterator3=_createForOfIteratorHelper(results);_context.prev=34;_iterator3.s();case 36:if((_step3=_iterator3.n()).done){_context.next=45;break;}_e=_step3.value;_destination={lat:Number(_e.data.G_LAT),lng:Number(_e.data.G_LNG)};_context.next=41;return getDistance(origin,_destination,method);case 41:dir=_context.sent;_e.directions=dir.rows[0].elements[0];//   e.place = places[i]\ncase 43:_context.next=36;break;case 45:_context.next=50;break;case 47:_context.prev=47;_context.t1=_context[\"catch\"](34);_iterator3.e(_context.t1);case 50:_context.prev=50;_iterator3.f();return _context.finish(50);case 53:// sort by distance\nresults.sort(function(a,b){return a.directions.distance.value-b.directions.distance.value;});resolve(results);case 55:case\"end\":return _context.stop();}}},_callee,null,[[4,20,23,26],[34,47,50,53]]);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}()));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function getDistancesFromMap(_x,_x2){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["getDistance","getSubwayTotals","hasSubways","zip","Number","getDistancesFromMap","placeMap","origin","Promise","resolve","reject","method","subways","Map","i","pid","place","destination","geometry","location","res","rows","elements","duration","value","set","directions","coords","places","e","push","results","lat","data","G_LAT","lng","G_LNG","dir","sort","a","b","distance"],"sources":["/Users/sumanthvarma/Desktop/frontend/src/Helpers/Subways.js"],"sourcesContent":["import { getDistance } from '../Requests/directions-requests' \nimport { getSubwayTotals } from '../Requests/subway-requests'\n\n\nexport const hasSubways = zip => {\n    return (Number(zip) >= 10001 && Number(zip) <= 11697)\n}\n\nexport const getDistancesFromMap = async (placeMap, origin) => {\n    return new Promise(async (resolve, reject) => {\n        let method = 'WALKING'\n        let subways = new Map()\n        let i = 0;\n        for (let [pid, place] of placeMap) {\n            if (i > 4) break;\n\n            let destination = place.geometry.location\n            let res = await getDistance(origin, destination, method)\n            if (res.rows[0].elements[0].duration.value <= 630) { // 630 sec, 10.5 min\n                subways.set(pid, {directions: res.rows[0].elements[0], place: place})\n            }\n            i += 1;\n        }\n        let coords = []\n        let places = []\n        for (let e of subways) {\n            coords.push(e[1].place.geometry.location)\n        //    places.push(e.place)\n        }\n        let results = await getSubwayTotals(coords)\n        for (let e of results) {\n            let destination = {lat: Number(e.data.G_LAT), lng: Number(e.data.G_LNG)}\n            \n            let dir = await getDistance(origin, destination, method)\n            e.directions = dir.rows[0].elements[0]\n         //   e.place = places[i]\n        }\n        // sort by distance\n        results.sort((a,b) => a.directions.distance.value - b.directions.distance.value)\n        resolve(results)\n    })\n}\n\n\n"],"mappings":"ghBAAA,OAASA,WAAT,KAA4B,iCAA5B,CACA,OAASC,eAAT,KAAgC,6BAAhC,CAGA,MAAO,IAAMC,WAAU,CAAG,QAAbA,WAAa,CAAAC,GAAG,CAAI,CAC7B,MAAQC,OAAM,CAACD,GAAD,CAAN,EAAe,KAAf,EAAwBC,MAAM,CAACD,GAAD,CAAN,EAAe,KAA/C,CACH,CAFM,CAIP,MAAO,IAAME,oBAAmB,4FAAG,kBAAOC,QAAP,CAAiBC,MAAjB,yJACxB,GAAIC,QAAJ,6FAAY,iBAAOC,OAAP,CAAgBC,MAAhB,+QACXC,MADW,CACF,SADE,CAEXC,OAFW,CAED,GAAIC,IAAJ,EAFC,CAGXC,CAHW,CAGP,CAHO,sCAIUR,QAJV,wIAILS,GAJK,gBAIAC,KAJA,qBAKPF,CAAC,CAAG,CALG,sEAOPG,WAPO,CAOOD,KAAK,CAACE,QAAN,CAAeC,QAPtB,wBAQKnB,YAAW,CAACO,MAAD,CAASU,WAAT,CAAsBN,MAAtB,CARhB,SAQPS,GARO,eASX,GAAIA,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYC,QAAZ,CAAqB,CAArB,EAAwBC,QAAxB,CAAiCC,KAAjC,EAA0C,GAA9C,CAAmD,CAAE;AACjDZ,OAAO,CAACa,GAAR,CAAYV,GAAZ,CAAiB,CAACW,UAAU,CAAEN,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYC,QAAZ,CAAqB,CAArB,CAAb,CAAsCN,KAAK,CAAEA,KAA7C,CAAjB,EACH,CACDF,CAAC,EAAI,CAAL,CAZW,0NAcXa,MAdW,CAcF,EAdE,CAeXC,MAfW,CAeF,EAfE,uCAgBDhB,OAhBC,MAgBf,kDAAuB,CAAdiB,CAAc,cACnBF,MAAM,CAACG,IAAP,CAAYD,CAAC,CAAC,CAAD,CAAD,CAAKb,KAAL,CAAWE,QAAX,CAAoBC,QAAhC,EACJ;AACC,CAnBc,8EAoBKlB,gBAAe,CAAC0B,MAAD,CApBpB,SAoBXI,OApBW,qDAqBDA,OArBC,mGAqBNF,EArBM,cAsBPZ,YAtBO,CAsBO,CAACe,GAAG,CAAE5B,MAAM,CAACyB,EAAC,CAACI,IAAF,CAAOC,KAAR,CAAZ,CAA4BC,GAAG,CAAE/B,MAAM,CAACyB,EAAC,CAACI,IAAF,CAAOG,KAAR,CAAvC,CAtBP,wBAwBKpC,YAAW,CAACO,MAAD,CAASU,YAAT,CAAsBN,MAAtB,CAxBhB,SAwBP0B,GAxBO,eAyBXR,EAAC,CAACH,UAAF,CAAeW,GAAG,CAAChB,IAAJ,CAAS,CAAT,EAAYC,QAAZ,CAAqB,CAArB,CAAf,CACH;AA1Bc,8NA4Bf;AACAS,OAAO,CAACO,IAAR,CAAa,SAACC,CAAD,CAAGC,CAAH,QAASD,EAAC,CAACb,UAAF,CAAae,QAAb,CAAsBjB,KAAtB,CAA8BgB,CAAC,CAACd,UAAF,CAAae,QAAb,CAAsBjB,KAA7D,EAAb,EACAf,OAAO,CAACsB,OAAD,CAAP,CA9Be,yFAAZ,qEADwB,0DAAH,kBAAnB1B,oBAAmB,gDAAzB"},"metadata":{},"sourceType":"module"}