{"ast":null,"code":"import { API, GOOGLE_KEY } from '../Constants';\nconst GEO_CODE = 'https://maps.googleapis.com/maps/api/geocode/json?';\nconst KEY = GOOGLE_KEY; // export function getGeoCode(street, city, state, callback) { \n//     var f_street = street.replace(/ /g, '+')\n//     var f_city = city.replace(/ /g, '+')\n//     var f_state = state.replace(/ /g, '+')\n//     let f_address = f_street + ',' + '+'+f_city + ',' + '+'+f_state\n//     fetch(GEO_CODE + 'address=' + f_address +'&key=' + KEY)\n//         .then(response => response.json())\n//         .then(data =>  callback(data));\n// }\n\nexport function getNearby(address, type, callBack) {\n  const lat = address.coords.lat;\n  const lng = address.coords.lng;\n  var token;\n  fetch(API + 'places/nearby/' + lat + '/' + lng + '/' + type, {\n    method: 'GET',\n    credentials: \"same-origin\",\n    //include, same-origin\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    token = response.headers.get('Pragma');\n    return response.json();\n  }).then(data => callBack(data, token)).catch(error => console.error('Error:', error));\n}\nexport function getPages(token, callBack) {\n  if (token != null) {\n    fetch(API + 'places/pages/' + token, {\n      method: 'GET',\n      credentials: \"same-origin\",\n      //include, same-origin\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      token = response.headers.get('Pragma');\n      return response.json();\n    }).then(data => callBack(data, token)).catch(error => console.error('Error:', error));\n  }\n}\nexport function getPhoto(ref, width, height, callback) {\n  fetch(API + 'places/photos/' + ref + '/' + width + '/' + height, {\n    method: 'GET',\n    credentials: \"same-origin\",\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).then(data => callback(data)).catch(error => console.error('Photo fetch error:', error));\n}","map":{"version":3,"names":["API","GOOGLE_KEY","GEO_CODE","KEY","getNearby","address","type","callBack","lat","coords","lng","token","fetch","method","credentials","headers","Accept","then","response","get","json","data","catch","error","console","getPages","getPhoto","ref","width","height","callback"],"sources":["/Users/sumanthvarma/Desktop/frontend/src/Requests/map-requests.js"],"sourcesContent":["import { API, GOOGLE_KEY } from '../Constants'\nconst GEO_CODE = 'https://maps.googleapis.com/maps/api/geocode/json?';\nconst KEY = GOOGLE_KEY\n\n// export function getGeoCode(street, city, state, callback) { \n//     var f_street = street.replace(/ /g, '+')\n//     var f_city = city.replace(/ /g, '+')\n//     var f_state = state.replace(/ /g, '+')\n//     let f_address = f_street + ',' + '+'+f_city + ',' + '+'+f_state\n\n//     fetch(GEO_CODE + 'address=' + f_address +'&key=' + KEY)\n//         .then(response => response.json())\n//         .then(data =>  callback(data));\n// }\n\nexport function getNearby(address, type, callBack) {\n    const lat = address.coords.lat\n    const lng = address.coords.lng\n    var token;\n    fetch(API + 'places/nearby/' \n    + lat +'/'\n    + lng + '/' \n    + type,\n    {\n        method: 'GET',\n        credentials: \"same-origin\", //include, same-origin\n        headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n    })\n    .then(response => {\n        token = response.headers.get('Pragma')\n        return response.json()\n    })\n    .then(data => callBack(data, token))\n    .catch(error => console.error('Error:', error))\n}\n\nexport function getPages(token, callBack) {\n    if (token != null) {\n            fetch(API + 'places/pages/' + token, {\n                method: 'GET',\n                credentials: \"same-origin\", //include, same-origin\n                headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n            })\n            .then(response => {\n                token = response.headers.get('Pragma')\n                return response.json()\n            })\n            .then(data => callBack(data, token))\n            .catch(error => console.error('Error:', error))\n    }\n}\n\nexport function getPhoto(ref, width, height, callback) {\n    fetch(API + 'places/photos/' + ref + '/' + width + '/' + height,\n    {\n        method : 'GET',\n        credentials: \"same-origin\",\n        headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n    })\n    .then(response =>  response.json())\n    .then(data => callback(data))\n    .catch(error => console.error('Photo fetch error:', error))\n}\n\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,cAAhC;AACA,MAAMC,QAAQ,GAAG,oDAAjB;AACA,MAAMC,GAAG,GAAGF,UAAZ,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,SAAT,CAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,QAAlC,EAA4C;EAC/C,MAAMC,GAAG,GAAGH,OAAO,CAACI,MAAR,CAAeD,GAA3B;EACA,MAAME,GAAG,GAAGL,OAAO,CAACI,MAAR,CAAeC,GAA3B;EACA,IAAIC,KAAJ;EACAC,KAAK,CAACZ,GAAG,GAAG,gBAAN,GACJQ,GADI,GACC,GADD,GAEJE,GAFI,GAEE,GAFF,GAGJJ,IAHG,EAIL;IACIO,MAAM,EAAE,KADZ;IAEIC,WAAW,EAAE,aAFjB;IAEgC;IAC5BC,OAAO,EAAE;MAACC,MAAM,EAAE,kBAAT;MAA6B,gBAAgB;IAA7C;EAHb,CAJK,CAAL,CASCC,IATD,CASMC,QAAQ,IAAI;IACdP,KAAK,GAAGO,QAAQ,CAACH,OAAT,CAAiBI,GAAjB,CAAqB,QAArB,CAAR;IACA,OAAOD,QAAQ,CAACE,IAAT,EAAP;EACH,CAZD,EAaCH,IAbD,CAaMI,IAAI,IAAId,QAAQ,CAACc,IAAD,EAAOV,KAAP,CAbtB,EAcCW,KAdD,CAcOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAdhB;AAeH;AAED,OAAO,SAASE,QAAT,CAAkBd,KAAlB,EAAyBJ,QAAzB,EAAmC;EACtC,IAAII,KAAK,IAAI,IAAb,EAAmB;IACXC,KAAK,CAACZ,GAAG,GAAG,eAAN,GAAwBW,KAAzB,EAAgC;MACjCE,MAAM,EAAE,KADyB;MAEjCC,WAAW,EAAE,aAFoB;MAEL;MAC5BC,OAAO,EAAE;QAACC,MAAM,EAAE,kBAAT;QAA6B,gBAAgB;MAA7C;IAHwB,CAAhC,CAAL,CAKCC,IALD,CAKMC,QAAQ,IAAI;MACdP,KAAK,GAAGO,QAAQ,CAACH,OAAT,CAAiBI,GAAjB,CAAqB,QAArB,CAAR;MACA,OAAOD,QAAQ,CAACE,IAAT,EAAP;IACH,CARD,EASCH,IATD,CASMI,IAAI,IAAId,QAAQ,CAACc,IAAD,EAAOV,KAAP,CATtB,EAUCW,KAVD,CAUOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAVhB;EAWP;AACJ;AAED,OAAO,SAASG,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,QAAtC,EAAgD;EACnDlB,KAAK,CAACZ,GAAG,GAAG,gBAAN,GAAyB2B,GAAzB,GAA+B,GAA/B,GAAqCC,KAArC,GAA6C,GAA7C,GAAmDC,MAApD,EACL;IACIhB,MAAM,EAAG,KADb;IAEIC,WAAW,EAAE,aAFjB;IAGIC,OAAO,EAAE;MAACC,MAAM,EAAE,kBAAT;MAA6B,gBAAgB;IAA7C;EAHb,CADK,CAAL,CAMCC,IAND,CAMMC,QAAQ,IAAKA,QAAQ,CAACE,IAAT,EANnB,EAOCH,IAPD,CAOMI,IAAI,IAAIS,QAAQ,CAACT,IAAD,CAPtB,EAQCC,KARD,CAQOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,oBAAd,EAAoCA,KAApC,CARhB;AASH"},"metadata":{},"sourceType":"module"}