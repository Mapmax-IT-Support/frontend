{"ast":null,"code":"// get lat/lng of 5 points in a circle around specified center where radius = distance\n// https://www.movable-type.co.uk/scripts/latlong.html\nexport function getPoints(center,distance,precision){var φ1=toRadians(center.lat);var λ1=toRadians(center.lng);var d=distance;var R=6371;// radius of earth in KM\nvar points=[];var divisor=precision;for(var i=0;i<divisor;i++){var brng=toRadians(i*(360/divisor));var φ2=Math.asin(Math.sin(φ1)*Math.cos(d/R)+Math.cos(φ1)*Math.sin(d/R)*Math.cos(brng));var λ2=λ1+Math.atan2(Math.sin(brng)*Math.sin(d/R)*Math.cos(φ1),Math.cos(d/R)-Math.sin(φ1)*Math.sin(φ2));var coords={};coords.lat=toDegrees(φ2);coords.lng=toDegrees(λ2);points.push(coords);}return points;}var toRadians=function toRadians(num){return num*(Math.PI/180);};var toDegrees=function toDegrees(num){return num*(180/Math.PI);};","map":{"version":3,"names":["getPoints","center","distance","precision","φ1","toRadians","lat","λ1","lng","d","R","points","divisor","i","brng","φ2","Math","asin","sin","cos","λ2","atan2","coords","toDegrees","push","num","PI"],"sources":["/Users/sumanthvarma/Desktop/frontend/src/Helpers/TradeZone.js"],"sourcesContent":["\n// get lat/lng of 5 points in a circle around specified center where radius = distance\n// https://www.movable-type.co.uk/scripts/latlong.html\nexport function getPoints(center, distance, precision) {\n    let φ1 = toRadians(center.lat)\n    let λ1 = toRadians(center.lng) \n    let d = distance\n    let R = 6371 // radius of earth in KM\n    let points = []\n    let divisor = precision\n    for (let i = 0; i < divisor; i++) {\n        let brng =  toRadians((i * (360/divisor)))\n        let φ2 = Math.asin(Math.sin(φ1)*Math.cos(d/R) +\n            Math.cos(φ1)*Math.sin(d/R)*Math.cos(brng));\n        let λ2 = λ1 + Math.atan2(Math.sin(brng)*Math.sin(d/R)*Math.cos(φ1),\n            Math.cos(d/R)-Math.sin(φ1)*Math.sin(φ2));\n        let coords = {}\n        coords.lat = toDegrees(φ2)\n        coords.lng = toDegrees(λ2)\n        points.push(coords)\n    }\n    return points\n}\n\nconst toRadians = (num) =>  num * (Math.PI/180)\nconst toDegrees = (num) =>  num * (180/Math.PI)"],"mappings":"AACA;AACA;AACA,MAAO,SAASA,UAAT,CAAmBC,MAAnB,CAA2BC,QAA3B,CAAqCC,SAArC,CAAgD,CACnD,GAAIC,GAAE,CAAGC,SAAS,CAACJ,MAAM,CAACK,GAAR,CAAlB,CACA,GAAIC,GAAE,CAAGF,SAAS,CAACJ,MAAM,CAACO,GAAR,CAAlB,CACA,GAAIC,EAAC,CAAGP,QAAR,CACA,GAAIQ,EAAC,CAAG,IAAR,CAAa;AACb,GAAIC,OAAM,CAAG,EAAb,CACA,GAAIC,QAAO,CAAGT,SAAd,CACA,IAAK,GAAIU,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,OAApB,CAA6BC,CAAC,EAA9B,CAAkC,CAC9B,GAAIC,KAAI,CAAIT,SAAS,CAAEQ,CAAC,EAAI,IAAID,OAAR,CAAH,CAArB,CACA,GAAIG,GAAE,CAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASd,EAAT,EAAaY,IAAI,CAACG,GAAL,CAASV,CAAC,CAACC,CAAX,CAAb,CACfM,IAAI,CAACG,GAAL,CAASf,EAAT,EAAaY,IAAI,CAACE,GAAL,CAAST,CAAC,CAACC,CAAX,CAAb,CAA2BM,IAAI,CAACG,GAAL,CAASL,IAAT,CADtB,CAAT,CAEA,GAAIM,GAAE,CAAGb,EAAE,CAAGS,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACE,GAAL,CAASJ,IAAT,EAAeE,IAAI,CAACE,GAAL,CAAST,CAAC,CAACC,CAAX,CAAf,CAA6BM,IAAI,CAACG,GAAL,CAASf,EAAT,CAAxC,CACVY,IAAI,CAACG,GAAL,CAASV,CAAC,CAACC,CAAX,EAAcM,IAAI,CAACE,GAAL,CAASd,EAAT,EAAaY,IAAI,CAACE,GAAL,CAASH,EAAT,CADjB,CAAd,CAEA,GAAIO,OAAM,CAAG,EAAb,CACAA,MAAM,CAAChB,GAAP,CAAaiB,SAAS,CAACR,EAAD,CAAtB,CACAO,MAAM,CAACd,GAAP,CAAae,SAAS,CAACH,EAAD,CAAtB,CACAT,MAAM,CAACa,IAAP,CAAYF,MAAZ,EACH,CACD,MAAOX,OAAP,CACH,CAED,GAAMN,UAAS,CAAG,QAAZA,UAAY,CAACoB,GAAD,QAAUA,IAAG,EAAIT,IAAI,CAACU,EAAL,CAAQ,GAAZ,CAAb,EAAlB,CACA,GAAMH,UAAS,CAAG,QAAZA,UAAY,CAACE,GAAD,QAAUA,IAAG,EAAI,IAAIT,IAAI,CAACU,EAAb,CAAb,EAAlB"},"metadata":{},"sourceType":"module"}