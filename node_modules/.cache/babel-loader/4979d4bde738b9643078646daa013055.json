{"ast":null,"code":"import { getDistance } from '../Requests/directions-requests';\nimport { getSubwayTotals } from '../Requests/subway-requests';\nexport const hasSubways = zip => {\n  return Number(zip) >= 10001 && Number(zip) <= 11697;\n};\nexport const getDistancesFromMap = async (placeMap, origin) => {\n  return new Promise(async (resolve, reject) => {\n    let method = 'WALKING';\n    let subways = new Map();\n    let i = 0;\n\n    for (let [pid, place] of placeMap) {\n      if (i > 4) break;\n      let destination = place.geometry.location;\n      let res = await getDistance(origin, destination, method);\n\n      if (res.rows[0].elements[0].duration.value <= 630) {\n        // 630 sec, 10.5 min\n        subways.set(pid, {\n          directions: res.rows[0].elements[0],\n          place: place\n        });\n      }\n\n      i += 1;\n    }\n\n    let coords = [];\n    let places = [];\n\n    for (let e of subways) {\n      coords.push(e[1].place.geometry.location); //    places.push(e.place)\n    }\n\n    let results = await getSubwayTotals(coords);\n\n    for (let e of results) {\n      let destination = {\n        lat: Number(e.data.G_LAT),\n        lng: Number(e.data.G_LNG)\n      };\n      let dir = await getDistance(origin, destination, method);\n      e.directions = dir.rows[0].elements[0]; //   e.place = places[i]\n    } // sort by distance\n\n\n    results.sort((a, b) => a.directions.distance.value - b.directions.distance.value);\n    resolve(results);\n  });\n};","map":{"version":3,"names":["getDistance","getSubwayTotals","hasSubways","zip","Number","getDistancesFromMap","placeMap","origin","Promise","resolve","reject","method","subways","Map","i","pid","place","destination","geometry","location","res","rows","elements","duration","value","set","directions","coords","places","e","push","results","lat","data","G_LAT","lng","G_LNG","dir","sort","a","b","distance"],"sources":["/Users/sumanthvarma/Desktop/frontend/src/Helpers/Subways.js"],"sourcesContent":["import { getDistance } from '../Requests/directions-requests' \nimport { getSubwayTotals } from '../Requests/subway-requests'\n\n\nexport const hasSubways = zip => {\n    return (Number(zip) >= 10001 && Number(zip) <= 11697)\n}\n\nexport const getDistancesFromMap = async (placeMap, origin) => {\n    return new Promise(async (resolve, reject) => {\n        let method = 'WALKING'\n        let subways = new Map()\n        let i = 0;\n        for (let [pid, place] of placeMap) {\n            if (i > 4) break;\n\n            let destination = place.geometry.location\n            let res = await getDistance(origin, destination, method)\n            if (res.rows[0].elements[0].duration.value <= 630) { // 630 sec, 10.5 min\n                subways.set(pid, {directions: res.rows[0].elements[0], place: place})\n            }\n            i += 1;\n        }\n        let coords = []\n        let places = []\n        for (let e of subways) {\n            coords.push(e[1].place.geometry.location)\n        //    places.push(e.place)\n        }\n        let results = await getSubwayTotals(coords)\n        for (let e of results) {\n            let destination = {lat: Number(e.data.G_LAT), lng: Number(e.data.G_LNG)}\n            \n            let dir = await getDistance(origin, destination, method)\n            e.directions = dir.rows[0].elements[0]\n         //   e.place = places[i]\n        }\n        // sort by distance\n        results.sort((a,b) => a.directions.distance.value - b.directions.distance.value)\n        resolve(results)\n    })\n}\n\n\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iCAA5B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAGA,OAAO,MAAMC,UAAU,GAAGC,GAAG,IAAI;EAC7B,OAAQC,MAAM,CAACD,GAAD,CAAN,IAAe,KAAf,IAAwBC,MAAM,CAACD,GAAD,CAAN,IAAe,KAA/C;AACH,CAFM;AAIP,OAAO,MAAME,mBAAmB,GAAG,OAAOC,QAAP,EAAiBC,MAAjB,KAA4B;EAC3D,OAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;IAC1C,IAAIC,MAAM,GAAG,SAAb;IACA,IAAIC,OAAO,GAAG,IAAIC,GAAJ,EAAd;IACA,IAAIC,CAAC,GAAG,CAAR;;IACA,KAAK,IAAI,CAACC,GAAD,EAAMC,KAAN,CAAT,IAAyBV,QAAzB,EAAmC;MAC/B,IAAIQ,CAAC,GAAG,CAAR,EAAW;MAEX,IAAIG,WAAW,GAAGD,KAAK,CAACE,QAAN,CAAeC,QAAjC;MACA,IAAIC,GAAG,GAAG,MAAMpB,WAAW,CAACO,MAAD,EAASU,WAAT,EAAsBN,MAAtB,CAA3B;;MACA,IAAIS,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYC,QAAZ,CAAqB,CAArB,EAAwBC,QAAxB,CAAiCC,KAAjC,IAA0C,GAA9C,EAAmD;QAAE;QACjDZ,OAAO,CAACa,GAAR,CAAYV,GAAZ,EAAiB;UAACW,UAAU,EAAEN,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYC,QAAZ,CAAqB,CAArB,CAAb;UAAsCN,KAAK,EAAEA;QAA7C,CAAjB;MACH;;MACDF,CAAC,IAAI,CAAL;IACH;;IACD,IAAIa,MAAM,GAAG,EAAb;IACA,IAAIC,MAAM,GAAG,EAAb;;IACA,KAAK,IAAIC,CAAT,IAAcjB,OAAd,EAAuB;MACnBe,MAAM,CAACG,IAAP,CAAYD,CAAC,CAAC,CAAD,CAAD,CAAKb,KAAL,CAAWE,QAAX,CAAoBC,QAAhC,EADmB,CAEvB;IACC;;IACD,IAAIY,OAAO,GAAG,MAAM9B,eAAe,CAAC0B,MAAD,CAAnC;;IACA,KAAK,IAAIE,CAAT,IAAcE,OAAd,EAAuB;MACnB,IAAId,WAAW,GAAG;QAACe,GAAG,EAAE5B,MAAM,CAACyB,CAAC,CAACI,IAAF,CAAOC,KAAR,CAAZ;QAA4BC,GAAG,EAAE/B,MAAM,CAACyB,CAAC,CAACI,IAAF,CAAOG,KAAR;MAAvC,CAAlB;MAEA,IAAIC,GAAG,GAAG,MAAMrC,WAAW,CAACO,MAAD,EAASU,WAAT,EAAsBN,MAAtB,CAA3B;MACAkB,CAAC,CAACH,UAAF,GAAeW,GAAG,CAAChB,IAAJ,CAAS,CAAT,EAAYC,QAAZ,CAAqB,CAArB,CAAf,CAJmB,CAKtB;IACA,CA3ByC,CA4B1C;;;IACAS,OAAO,CAACO,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACb,UAAF,CAAae,QAAb,CAAsBjB,KAAtB,GAA8BgB,CAAC,CAACd,UAAF,CAAae,QAAb,CAAsBjB,KAA1E;IACAf,OAAO,CAACsB,OAAD,CAAP;EACH,CA/BM,CAAP;AAgCH,CAjCM"},"metadata":{},"sourceType":"module"}