{"ast":null,"code":"import _classCallCheck from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _taggedTemplateLiteral from\"/Users/sumanthvarma/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from'react';import{css}from'@emotion/core';// Another way to import. This is recommended to reduce bundle size\nimport ClipLoader from'react-spinners/ClipLoader';// Can be a string as well. Need to ensure each key-value pair ends with ;\nimport{jsx as _jsx}from\"react/jsx-runtime\";var override=css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: block;\\n    margin: 0 auto;\\n    border-color: red;\\n\"])));var Loader=/*#__PURE__*/function(_React$Component){_inherits(Loader,_React$Component);var _super=_createSuper(Loader);function Loader(props){var _this;_classCallCheck(this,Loader);_this=_super.call(this,props);_this.state={loading:true};return _this;}_createClass(Loader,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"sweet-loading\",children:/*#__PURE__*/_jsx(ClipLoader,{css:override,sizeUnit:\"px\",size:150,color:'#123abc',loading:this.state.loading})});}}]);return Loader;}(React.Component);export default Loader;","map":{"version":3,"names":["React","css","ClipLoader","override","Loader","props","state","loading","Component"],"sources":["/Users/sumanthvarma/Desktop/frontend/src/Components/UI/ClipLoader.js"],"sourcesContent":["import React from 'react';\nimport { css } from '@emotion/core';\n// Another way to import. This is recommended to reduce bundle size\nimport ClipLoader from 'react-spinners/ClipLoader';\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n \nclass Loader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n  }\n  render() {\n    return (\n      <div className='sweet-loading'>\n        <ClipLoader\n          css={override}\n          sizeUnit={\"px\"}\n          size={150}\n          color={'#123abc'}\n          loading={this.state.loading}\n        />\n      </div> \n    )\n  }\n}\n\nexport default Loader"],"mappings":"snBAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA;AACA,MAAOC,WAAP,KAAuB,2BAAvB,CAEA;2CACA,GAAMC,SAAQ,CAAGF,GAAH,qIAAd,C,GAMMG,O,4GACJ,gBAAYC,KAAZ,CAAmB,wCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,OAAO,CAAE,IADE,CAAb,CAFiB,aAKlB,C,yCACD,iBAAS,CACP,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,KAAC,UAAD,EACE,GAAG,CAAEJ,QADP,CAEE,QAAQ,CAAE,IAFZ,CAGE,IAAI,CAAE,GAHR,CAIE,KAAK,CAAE,SAJT,CAKE,OAAO,CAAE,KAAKG,KAAL,CAAWC,OALtB,EADF,EADF,CAWD,C,oBAnBkBP,KAAK,CAACQ,S,EAsB3B,cAAeJ,OAAf"},"metadata":{},"sourceType":"module"}