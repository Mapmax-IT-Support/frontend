{"ast":null,"code":"var _jsxFileName = \"/Users/sumanthvarma/Desktop/frontend/src/Components/Listings/AddListing/SelectLocation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport * as selectors from '../../../Reducers/selectors';\nimport Button from 'react-bootstrap/Button';\nimport AutoCompleteBar from \"../../AutoCompleteBar\";\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { getListingByPlaceId } from '../../../Requests/listings-requests';\nimport PulseLoader from \"../../UI/PulseLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectLocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      this.props.setLocation(this.state.address);\n    };\n\n    this.selectAddress = async address => {\n      this.setState({\n        error: false,\n        loading: true\n      });\n      let error = false;\n      let zip,\n          number,\n          street,\n          city,\n          state = '';\n      let place;\n      let geoCode = await geocodeByAddress(address).then(results => {\n        for (let c of results[0].address_components) {\n          for (let type of c.types) {\n            if (type == 'street_number') number = c.long_name;else if (type == 'route') street = c.short_name;else if (type == 'locality') city = c.long_name;else if (type == 'administrative_area_level_1') state = c.short_name;else if (type == \"postal_code\") zip = c.long_name;\n          }\n        } // improper address\n\n\n        if (number == undefined) {\n          this.setState({\n            error: true,\n            errorMessage: \"Sorry, this address is too general. Please try again\",\n            loading: false\n          });\n          error = true;\n          return;\n        }\n\n        place = results[0];\n        return getLatLng(results[0]);\n      }).then(latLng => latLng).catch(error => console.error('Error', error));\n\n      if (place != undefined) {\n        // check if listing already exists\n        let list_check = await getListingByPlaceId(place.place_id, true);\n\n        if (list_check.length > 0) {\n          this.setState({\n            error: true,\n            errorMessage: \"Sorry, this location already has a listing.\",\n            loading: false\n          });\n          error = true;\n          return;\n        }\n      }\n\n      let addressState = {};\n      addressState.formatted = address;\n      addressState.street = number + ' ' + street;\n      addressState.city = city;\n      addressState.state = state;\n      addressState.zip = zip;\n      addressState.coords = geoCode;\n      addressState.place = place;\n      if (error) return;\n      this.setState({\n        address: addressState,\n        loading: false\n      });\n    };\n\n    this.state = {\n      error: false,\n      errorMessage: '',\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectLocationPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectLocationHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Begin typing in the address of your desired location and select it from the dropdown menu to get started \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), this.state.error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          marginTop: 10\n        },\n        children: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listingSearchBar\",\n        children: [/*#__PURE__*/_jsxDEV(AutoCompleteBar, {\n          addressFunction: this.selectAddress,\n          position: \"relative\",\n          font: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), this.state.loading && /*#__PURE__*/_jsxDEV(PulseLoader, {\n          color: \"#00D4FF\",\n          size: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 45\n        }, this), !this.state.loading && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleSubmit,\n          disabled: this.state.address == undefined || this.state.error,\n          style: {\n            backgroundColor: '#00d4ff',\n            fontWeight: 'bold',\n            alignSelf: 'center',\n            zIndex: -100000\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createSelector(selectors.addressSelector, selectors.userSelector, (address, user) => ({\n  address,\n  user\n}));\nexport default connect(mapStateToProps)(SelectLocation);","map":{"version":3,"names":["React","connect","createSelector","selectors","Button","AutoCompleteBar","geocodeByAddress","getLatLng","getListingByPlaceId","PulseLoader","SelectLocation","Component","constructor","props","handleSubmit","setLocation","state","address","selectAddress","setState","error","loading","zip","number","street","city","place","geoCode","then","results","c","address_components","type","types","long_name","short_name","undefined","errorMessage","latLng","catch","console","list_check","place_id","length","addressState","formatted","coords","render","color","marginTop","backgroundColor","fontWeight","alignSelf","zIndex","mapStateToProps","addressSelector","userSelector","user"],"sources":["/Users/sumanthvarma/Desktop/frontend/src/Components/Listings/AddListing/SelectLocation.js"],"sourcesContent":["import React  from 'react'\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport * as selectors from '../../../Reducers/selectors'\nimport Button from 'react-bootstrap/Button'\nimport AutoCompleteBar from \"../../AutoCompleteBar\"\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { getListingByPlaceId } from '../../../Requests/listings-requests'\nimport PulseLoader from \"../../UI/PulseLoader\"\n\nclass SelectLocation extends React.Component {\n\n    constructor(props) {\n        super(props)\n       \n        this.state = {\n            error : false,\n            errorMessage : '',\n            loading : false\n        }\n    }\n\n    handleSubmit = async () => {\n        this.props.setLocation(this.state.address)\n    }\n\n    selectAddress = async (address) => {\n        this.setState({ error : false, loading: true  })\n        let error = false\n        let zip, number, street, city, state = ''\n        let place;\n        let geoCode = await geocodeByAddress(address).then(results => { \n                for (let c of results[0].address_components) {\n                    for (let type of c.types) {\n                        if (type == 'street_number')\n                            number = c.long_name \n                        else if (type == 'route')\n                            street =  c.short_name \n                        else if (type == 'locality')\n                            city = c.long_name\n                        else if (type == 'administrative_area_level_1')\n                            state = c.short_name\n                        else if (type == \"postal_code\") \n                            zip = c.long_name\n                    }\n                }\n                // improper address\n                if (number == undefined) {\n                    this.setState({ error : true, errorMessage : \"Sorry, this address is too general. Please try again\", loading : false })\n                    error = true \n                    return;\n                }  \n                place = results[0]\n                return getLatLng(results[0])\n            })\n            .then(latLng => latLng)\n            .catch(error => console.error('Error', error));\n\n            if (place != undefined) {\n                // check if listing already exists\n                let list_check = await getListingByPlaceId(place.place_id, true)\n\n                if (list_check.length > 0) {\n                    this.setState({ error : true, errorMessage : \"Sorry, this location already has a listing.\", loading: false })\n                    error = true \n                    return;\n                }\n            }\n\n            let addressState = {}\n            addressState.formatted = address\n            addressState.street = number + ' ' + street\n           \n            addressState.city = city\n            addressState.state = state\n            addressState.zip = zip\n            addressState.coords = geoCode\n            addressState.place = place\n\n\n            if (error) return;\n            \n            this.setState({ address : addressState, loading : false })\n    }\n\n\n    render() {\n        return (\n            <div className=\"selectLocationPage\">\n                <div className=\"selectLocationHeader\">\n                    <br></br>\n                    <h2>Select Location</h2>\n                    <br></br>\n                    <p>Begin typing in the address of your desired location and select it from the dropdown menu to get started </p>\n                </div>\n                    {this.state.error && <p style={{ color: 'red', marginTop: 10}}>{this.state.errorMessage}</p>}\n                    <div className=\"listingSearchBar\">\n                    <AutoCompleteBar addressFunction={this.selectAddress} position=\"relative\" font/>\n                    <br></br>\n                    {this.state.loading &&  <PulseLoader color='#00D4FF' size={10}/>}\n                    {!this.state.loading && <Button variant=\"primary\" onClick={this.handleSubmit} disabled={this.state.address == undefined || this.state.error}\n                        style={{backgroundColor:'#00d4ff', fontWeight: 'bold', alignSelf: 'center', zIndex: -100000 }}>\n                        Submit\n                    </Button>\n                    }\n                </div>\n            </div>\n        )\n    }\n }\n\n \n const mapStateToProps = createSelector(\n     selectors.addressSelector,\n     selectors.userSelector,\n    (address, user) => ({\n        address, user \n    })\n )\n\n\n export default connect(mapStateToProps)(SelectLocation)"],"mappings":"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"},"metadata":{},"sourceType":"module"}